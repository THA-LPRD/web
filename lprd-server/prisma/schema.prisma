// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Display {
  mac_adr          String  @id @unique
  friendly_name    String?
  width            Int
  height           Int
  last_seen        DateTime?
  currentAsset     String?
  currentAssetType String?
}

model Template {
  id               String  @id @default(cuid())
  friendly_name    String?
  html             String
  using_assets     Asset[]
}

model Asset {
// Bleibt
  id               String  @id @default(cuid())
  friendly_name    String?
  file_path        String?

// Fällt raus
  type             Type?  
  html             String?
  valid_until      DateTime

// Kommt neu
  template         Template? @relation(fields: [template_id], references: [id])
  template_id      String?
  datas            DatasOnAssets[]
}

model Data {
  id               String  @id @default(cuid())
  json             Json
  origin_type      Data_origin_type
  origin_worker    String?
  outdated_at      DateTime?
  assets           DatasOnAssets[]
}

model DatasOnAssets {
  asset      Asset @relation(fields: [assetId], references: [id])
  assetId    String 
  data       Data @relation(fields: [dataId], references: [id])
  dataId     String

  @@id([assetId, dataId])
}

// Fällt raus
enum Type {
  STATIC
  DYNAMIC
}

// Kommt neu
enum Data_origin_type {
  TXT
  CSV
  JSON
}


// Untis Worker

model UntisRooms {
  id                Int @id @unique
  active            Boolean?
  alternateName     String?
  backColor         String?
  foreColor         String?
  longName          String?
  name              String?
}